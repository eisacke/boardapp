{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/board.js","js/controllers/boards.js","js/controllers/main.js","js/models/pin.js","js/controllers/pins.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","tokenPrefix","loginUrl","signupUrl","facebook","clientId","instagram","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","service","console","log","Board","$resource","id","update","method","BoardsIndexController","boardsIndex","all","query","BoardsNewController","create","save","boardsNew","board","_id","BoardsShowController","Pin","deleteBoard","boardsShow","$remove","showCreateForm","formVisible","hideCreateForm","newPin","createPin","pin","boardId","params","get","showEditForm","formEditVisible","currentPin","hideEditForm","showPin","delete","BoardsEditController","updateBoard","boardsEdit","$update","MainController","$rootScope","logout","main","isLoggedIn","isAuthenticated","PinsNewController","pinsNew","PinsShowController","deletePin","pinsShow","PinsEditController","updatePin","pinsEdit","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n .module('boardApp', ['ngResource', 'ui.router', 'satellizer'])\n .config(Router)\n .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n\n   .state('register', {\n     url: '/register',\n     templateUrl: '/templates/register.html',\n     controller: 'RegisterController as register'\n   })\n   .state('login', {\n     url: '/login',\n     templateUrl: '/templates/login.html',\n     controller: 'LoginController as login'\n   })\n   .state('test', {\n     url: '/test',\n     templateUrl: '/templates/test.html'\n   })\n   .state('boardsIndex', {\n     url: '/boards',\n     templateUrl: '/templates/boardsIndex.html',\n     controller: 'BoardsIndexController as boardsIndex'\n   })\n   .state('boardsNew', {\n     url: '/boards/new',\n     templateUrl: '/templates/boardsNew.html',\n     controller: 'BoardsNewController as boardsNew'\n   })\n   .state('boardsShow', {\n     url: '/boards/:id',\n     templateUrl: '/templates/boardsShow.html',\n     controller: 'BoardsShowController as boardsShow'\n   })\n   .state('boardsEdit', {\n     url: '/boards/:id/edit',\n     templateUrl: '/templates/boardsEdit.html',\n     controller: 'BoardsEditController as boardsEdit'\n   })\n   .state('pinsNew', {\n     url: '/pins/new',\n     templateUrl: '/templates/pinsNew.html',\n     controller: 'PinsNewController as pinsNew'\n   })\n   .state('pinsShow', {\n     url: '/pins/:id',\n     templateUrl: '/templates/pinsShow.html',\n     controller: 'PinsShowController as pinsShow'\n   })\n   .state('userBoards', {\n     url: '/user/:id',\n     templateUrl: '/templates/userBoards.html',\n     controller: 'BoardsShowController as boardsShow'\n   });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.tokenPrefix = '';\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.facebook({\n    clientId: '592951794244851'\n  });\n\n  $authProvider.instagram({\n    clientId: '64171eadf0914dd7bf7839bc034e42e0'\n  });\n}\n","angular.module('boardApp')\n    .controller('RegisterController', RegisterController)\n    .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('test');\n      });\n  }\n\n  register.submit = submit;\n\n}\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('test');\n      });\n  }\n\n  function authenticate(service) {\n    $auth.authenticate(service)\n    .then(() => {\n      $state.go('test');\n      console.log('Is this running');\n    });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n\n}\n","angular.module('boardApp')\n  .factory('Board', Board);\n\nBoard.$inject = ['$resource'];\nfunction Board ($resource) {\n  return new $resource('/boards/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('boardApp')\n  .controller('BoardsIndexController', BoardsIndexController)\n  .controller('BoardsNewController', BoardsNewController)\n  .controller('BoardsShowController', BoardsShowController)\n  .controller('BoardsEditController', BoardsEditController);\n\nBoardsIndexController.$inject = ['Board'];\nfunction BoardsIndexController(Board){\n  const boardsIndex = this;\n\n  boardsIndex.all = Board.query();\n}\n\nBoardsNewController.$inject = ['Board', '$state'];\nfunction BoardsNewController(Board, $state) {\n  const boardsNew = this;\n\n  boardsNew.board = {};\n\n  function create() {\n    Board.save(boardsNew.board, (board) => {\n      $state.go('boardsShow', { id: board._id });\n    });\n  }\n\n  boardsNew.create = create;\n}\n\nBoardsShowController.$inject = ['Board', 'Pin', '$state'];\nfunction BoardsShowController(Board, Pin, $state) {\n  const boardsShow = this;\n  boardsShow.formVisible = false;\n  boardsShow.formEditVisible = false;\n  boardsShow.board = Board.get($state.params);\n\n  function deleteBoard() {\n    boardsShow.board.$remove(() => {\n      $state.go('boardsIndex');\n    });\n  }\n\n  boardsShow.delete = deleteBoard;\n\n  //PIN CONTROLLER\n  boardsShow.newPin = {};\n\n  function showCreateForm() {\n    boardsShow.formVisible = true;\n  }\n\n  function hideCreateForm() {\n    boardsShow.formVisible = false;\n    boardsShow.newPin = {};\n  }\n\n  boardsShow.showCreateForm = showCreateForm;\n  boardsShow.hideCreateForm = hideCreateForm;\n\n  function createPin() {\n    boardsShow.pin.boardId = $state.params.id;\n    Pin.save(boardsShow.pin, () => {\n      hideCreateForm();\n      boardsShow.board = Board.get($state.params);\n      console.log(boardsShow.pin);\n    });\n  }\n\n  function showEditForm(pin) {\n    // console.log('TRUE!');\n    // console.log('this: ',boardsShow.board.pins);\n    boardsShow.formEditVisible = true;\n    boardsShow.currentPin = pin;\n  }\n\n  function hideEditForm() {\n    boardsShow.formEditVisible = false;\n  }\n\n  function showPin(pin) {\n    console.log('clicked!', pin);\n\n    showEditForm(pin);\n  }\n\n\n  boardsShow.showEditForm = showEditForm;\n  boardsShow.hideEditForm = hideEditForm;\n  boardsShow.createPin = createPin;\n  boardsShow.showPin = showPin;\n}\n\nBoardsEditController.$inject = ['Board', '$state'];\nfunction BoardsEditController(Board, $state) {\n  const boardsEdit = this;\n\n  boardsEdit.board = Board.get($state.params);\n\n  function updateBoard() {\n    boardsEdit.board.$update(() => {\n      $state.go('boardsShow', $state.params);\n    });\n  }\n  boardsEdit.update = updateBoard;\n}\n","angular.module('boardApp')\n  .controller('MainController', MainController);\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('login');\n      });\n  }\n  main.logout = logout;\n}\n","angular.module('boardApp')\n  .factory('Pin', Pin);\n\nPin.$inject = ['$resource'];\nfunction Pin ($resource) {\n  return new $resource('/boards/:boardId/pins/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('boardApp')\n  // .controller('PinsIndexController', PinsIndexController)\n  .controller('PinsNewController', PinsNewController)\n  .controller('PinsShowController', PinsShowController)\n  .controller('PinsEditController', PinsEditController);\n\n// PinsIndexController.$inject = ['Pin'];\n// function PinsIndexController(Pin){\n//   const pinsIndex = this;\n//\n//   pinsIndex.all = Pin.query();\n// }\n\nPinsNewController.$inject = ['Pin', '$state'];\nfunction PinsNewController(Pin, $state) {\n  const pinsNew = this;\n\n  pinsNew.pin = {};\n\n  function create() {\n    Pin.save(pinsNew.pin, (pin) => {\n      $state.go('pinsShow', { id: pin._id });\n    });\n  }\n\n  pinsNew.create = create;\n}\n\nPinsShowController.$inject = ['Pin', '$state'];\nfunction PinsShowController(Pin, $state) {\n  const pinsShow = this;\n\n  pinsShow.pin = Pin.get($state.params);\n\n  function deletePin() {\n    pinsShow.pin.$remove(() => {\n      $state.go('boardsShow');\n    });\n  }\n\n  pinsShow.delete = deletePin;\n}\n\nPinsEditController.$inject = ['Pin', '$state'];\nfunction PinsEditController(Pin, $state) {\n  const pinsEdit = this;\n\n  pinsEdit.pin = Pin.get($state.params);\n\n  function updatePin() {\n    pinsEdit.pin.$update(() => {\n      $state.go('pinsShow', $state.params);\n    });\n  }\n  pinsEdit.update = updatePin;\n}\n"]}