{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/board.js","js/controllers/boards.js","js/controllers/main.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","tokenPrefix","loginUrl","signupUrl","facebook","clientId","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","service","console","log","Board","$resource","id","update","method","BoardsIndexController","boardsIndex","all","query","BoardsNewController","create","save","boardsNew","board","_id","BoardsShowController","deleteBoard","boardsShow","$remove","get","params","delete","BoardsEditController","updateBoard","boardsEdit","$update","MainController","$rootScope","logout","main","isLoggedIn","isAuthenticated","angular","module","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n .module('boardApp', ['ngResource', 'ui.router', 'satellizer'])\n .config(Router)\n .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n\n   .state('register', {\n     url: '/register',\n     templateUrl: '/templates/register.html',\n     controller: 'RegisterController as register'\n   })\n   .state('login', {\n     url: '/login',\n     templateUrl: '/templates/login.html',\n     controller: 'LoginController as login'\n   })\n   .state('test', {\n     url: '/test',\n     templateUrl: '/templates/test.html'\n   })\n   .state('boardsIndex', {\n     url: '/boards',\n     templateUrl: '/templates/boardsIndex.html',\n     controller: 'BoardsIndexController as boardsIndex'\n   })\n   .state('boardsNew', {\n     url: '/boards/new',\n     templateUrl: '/templates/boardsNew.html',\n     controller: 'BoardsNewController as boardsNew'\n   })\n   .state('boardsShow', {\n     url: '/boards/:id',\n     templateUrl: '/templates/boardsShow.html',\n     controller: 'BoardsShowController as boardsShow'\n   })\n   .state('boardsEdit', {\n     url: '/boards/:id/edit',\n     templateUrl: '/templates/boardsEdit.html',\n     controller: 'BoardsEditController as boardsEdit'\n   });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.tokenPrefix = '';\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.facebook({\n    clientId: '592951794244851'\n  });\n}\n","angular.module('boardApp')\n    .controller('RegisterController', RegisterController)\n    .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('test');\n      });\n  }\n\n  register.submit = submit;\n\n}\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('test');\n      });\n  }\n\n  function authenticate(service) {\n    $auth.authenticate(service)\n    .then(() => {\n      $state.go('test');\n      console.log('Is this running');\n    });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n\n}\n","angular.module('boardApp')\n  .factory('Board', Board);\n\nBoard.$inject = ['$resource'];\nfunction Board ($resource) {\n  return new $resource('/boards/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('boardApp')\n  .controller('BoardsIndexController', BoardsIndexController)\n  .controller('BoardsNewController', BoardsNewController)\n  .controller('BoardsShowController', BoardsShowController)\n  .controller('BoardsEditController', BoardsEditController);\n\nBoardsIndexController.$inject = ['Board'];\nfunction BoardsIndexController(Board){\n  const boardsIndex = this;\n\n  boardsIndex.all = Board.query();\n}\n\nBoardsNewController.$inject = ['Board', '$state'];\nfunction BoardsNewController(Board, $state) {\n  const boardsNew = this;\n\n  boardsNew.board = {};\n\n  function create() {\n    Board.save(boardsNew.board, (board) => {\n      $state.go('boardsShow', { id: board._id });\n    });\n  }\n\n  boardsNew.create = create;\n}\n\nBoardsShowController.$inject = ['Board', '$state'];\nfunction BoardsShowController(Board, $state) {\n  const boardsShow = this;\n\n  boardsShow.board = Board.get($state.params);\n\n  function deleteBoard() {\n    boardsShow.board.$remove(() => {\n      $state.go('boardsIndex');\n    });\n  }\n\n  boardsShow.delete = deleteBoard;\n}\n\nBoardsEditController.$inject = ['Board', '$state'];\nfunction BoardsEditController(Board, $state) {\n  const boardsEdit = this;\n\n  boardsEdit.board = Board.get($state.params);\n\n  function updateBoard() {\n    boardsEdit.board.$update(() => {\n      $state.go('boardsShow', $state.params);\n    });\n  }\n  boardsEdit.update = updateBoard;\n}\n","angular.module('boardApp')\n  .controller('MainController', MainController);\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('login');\n      });\n  }\n  main.logout = logout;\n}\n"]}