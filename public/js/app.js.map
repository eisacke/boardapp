{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/board.js","js/controllers/boards.js","js/controllers/main.js","js/models/pin.js","js/controllers/pins.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","tokenPrefix","loginUrl","signupUrl","facebook","clientId","instagram","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","service","console","log","Board","$resource","id","update","method","BoardsIndexController","boardsIndex","all","query","BoardsNewController","create","save","boardsNew","board","_id","UserBoardsController","userBoards","payload","getPayload","BoardsShowController","Pin","deleteBoard","boardsShow","$remove","showCreateForm","formVisible","hideCreateForm","newPin","createPin","boardId","params","pin","get","showEditForm","formEditVisible","currentPin","hideEditForm","PinsEditController","updatePin","pinsEdit","showPin","updateBoard","updatedPin","delete","$inject","BoardsEditController","boardsEdit","$update","MainController","logout","main","isLoggedIn","isAuthenticated","PinsNewController","pinsNew","PinsShowController","deletePin","pinsShow","angular","module","config","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n .module('boardApp', ['ngResource', 'ui.router', 'satellizer'])\n .config(Router)\n .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n\n   .state('register', {\n     url: '/register',\n     templateUrl: '/templates/register.html',\n     controller: 'RegisterController as register'\n   })\n   .state('login', {\n     url: '/login',\n     templateUrl: '/templates/login.html',\n     controller: 'LoginController as login'\n   })\n   .state('test', {\n     url: '/test',\n     templateUrl: '/templates/test.html'\n   })\n   .state('boardsIndex', {\n     url: '/boards',\n     templateUrl: '/templates/boardsIndex.html',\n     controller: 'BoardsIndexController as boardsIndex'\n   })\n   .state('boardsNew', {\n     url: '/boards/new',\n     templateUrl: '/templates/boardsNew.html',\n     controller: 'BoardsNewController as boardsNew'\n   })\n   .state('userBoards', {\n     url: '/boards/me',\n     templateUrl: '/templates/userBoards.html',\n     controller: 'UserBoardsController as userBoards'\n   })\n   .state('boardsShow', {\n     url: '/boards/:id',\n     templateUrl: '/templates/boardsShow.html',\n     controller: 'BoardsShowController as boardsShow'\n   })\n   .state('boardsEdit', {\n     url: '/boards/:id/edit',\n     templateUrl: '/templates/boardsEdit.html',\n     controller: 'BoardsEditController as boardsEdit'\n   })\n   .state('pinsNew', {\n     url: '/pins/new',\n     templateUrl: '/templates/pinsNew.html',\n     controller: 'PinsNewController as pinsNew'\n   })\n   .state('pinsShow', {\n     url: '/pins/:id',\n     templateUrl: '/templates/pinsShow.html',\n     controller: 'PinsShowController as pinsShow'\n   });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.tokenPrefix = '';\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.facebook({\n    clientId: '592951794244851'\n  });\n\n  $authProvider.instagram({\n    clientId: '64171eadf0914dd7bf7839bc034e42e0'\n  });\n}\n","angular.module('boardApp')\n    .controller('RegisterController', RegisterController)\n    .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('test');\n      });\n  }\n\n  register.submit = submit;\n\n}\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('test');\n      });\n  }\n\n  function authenticate(service) {\n    $auth.authenticate(service)\n    .then(() => {\n      $state.go('test');\n      console.log('Is this running');\n    });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n\n}\n","angular.module('boardApp')\n  .factory('Board', Board);\n\nBoard.$inject = ['$resource'];\nfunction Board ($resource) {\n  return new $resource('/boards/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('boardApp')\n  .controller('BoardsIndexController', BoardsIndexController)\n  .controller('BoardsNewController', BoardsNewController)\n  .controller('BoardsShowController', BoardsShowController)\n  .controller('BoardsEditController', BoardsEditController)\n  .controller('UserBoardsController', UserBoardsController);\n\nBoardsIndexController.$inject = ['Board'];\nfunction BoardsIndexController(Board){\n  const boardsIndex = this;\n\n  boardsIndex.all = Board.query();\n}\n\nBoardsNewController.$inject = ['Board', '$state'];\nfunction BoardsNewController(Board, $state) {\n  const boardsNew = this;\n\n  boardsNew.board = {};\n\n  function create() {\n    Board.save(boardsNew.board, (board) => {\n      $state.go('boardsShow', { id: board._id });\n    });\n  }\n\n  boardsNew.create = create;\n}\n\nUserBoardsController.$inject = ['Board', '$auth'];\nfunction UserBoardsController(Board, $auth) {\n  const userBoards = this;\n\n  const payload = $auth.getPayload();\n  userBoards.all = Board.query({ user: payload._id });\n}\n\nBoardsShowController.$inject = ['Board', 'Pin', '$state'];\nfunction BoardsShowController(Board, Pin, $state) {\n  const boardsShow = this;\n  boardsShow.formVisible = false;\n  boardsShow.formEditVisible = false;\n  boardsShow.board = Board.get($state.params);\n\n  function deleteBoard() {\n    boardsShow.board.$remove(() => {\n      $state.go('boardsIndex');\n    });\n  }\n\n  boardsShow.delete = deleteBoard;\n\n  //PIN CONTROLLER\n  boardsShow.newPin = {};\n\n  function showCreateForm() {\n    boardsShow.formVisible = true;\n  }\n\n  function hideCreateForm() {\n    boardsShow.formVisible = false;\n    boardsShow.newPin = {};\n  }\n\n  boardsShow.showCreateForm = showCreateForm;\n  boardsShow.hideCreateForm = hideCreateForm;\n\n  function createPin() {\n    Pin.save({ boardId: $state.params.id }, boardsShow.newPin, () => {\n      boardsShow.pin = {};\n      hideCreateForm();\n      boardsShow.board = Board.get($state.params);\n    });\n  }\n\n  function showEditForm(pin) {\n    // console.log('TRUE!');\n    // console.log('this: ',boardsShow.board.pins);\n    boardsShow.formEditVisible = true;\n    boardsShow.currentPin = pin;\n  }\n\n  function hideEditForm() {\n    boardsShow.formEditVisible = false;\n  }\n\n  PinsEditController.$inject = ['Pin', '$state'];\n  function PinsEditController(Pin, $state) {\n    const pinsEdit = this;\n\n    pinsEdit.pin = Pin.get($state.params);\n\n    function updatePin() {\n      Pin.save({ boardId: $state.params.id }, boardsShow.currentPin, () => {\n        $state.go('pinsShow', $state.params);\n      });\n    }\n    pinsEdit.updatePin = updatePin;\n    hideEditForm();\n  }\n\n  function showPin(pin) {\n    console.log('clicked!', pin);\n\n    showEditForm(pin);\n  }\n\n  boardsShow.showEditForm = showEditForm;\n  boardsShow.hideEditForm = hideEditForm;\n  boardsShow.createPin = createPin;\n  boardsShow.showPin = showPin;\n\n  function updateBoard(updatedPin) {\n    Pin.update({ id: updatedPin._id, boardId: $state.params.id }, updatedPin);\n  }\n  boardsShow.updateBoard = updateBoard;\n\n}\n\nBoardsEditController.$inject = ['Board', '$state'];\nfunction BoardsEditController(Board, $state) {\n  const boardsEdit = this;\n\n  boardsEdit.board = Board.get($state.params);\n\n  function updateBoard() {\n    console.log('Running?');\n    boardsEdit.board.$update(() => {\n      $state.go('boardsShow', $state.params);\n    });\n  }\n  boardsEdit.updateBoard = updateBoard;\n}\n","angular.module('boardApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state'];\nfunction MainController($auth, $state) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('login');\n      });\n  }\n  main.logout = logout;\n}\n","angular.module('boardApp')\n  .factory('Pin', Pin);\n\nPin.$inject = ['$resource'];\nfunction Pin ($resource) {\n  return new $resource('/boards/:boardId/pins/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('boardApp')\n  // .controller('PinsIndexController', PinsIndexController)\n  .controller('PinsNewController', PinsNewController)\n  .controller('PinsShowController', PinsShowController)\n  .controller('PinsEditController', PinsEditController);\n\n// PinsIndexController.$inject = ['Pin'];\n// function PinsIndexController(Pin){\n//   const pinsIndex = this;\n//\n//   pinsIndex.all = Pin.query();\n// }\n\nPinsNewController.$inject = ['Pin', '$state'];\nfunction PinsNewController(Pin, $state) {\n  const pinsNew = this;\n\n  pinsNew.pin = {};\n\n  function create() {\n    Pin.save(pinsNew.pin, (pin) => {\n      $state.go('pinsShow', { id: pin._id });\n    });\n  }\n\n  pinsNew.create = create;\n}\n\nPinsShowController.$inject = ['Pin', '$state'];\nfunction PinsShowController(Pin, $state) {\n  const pinsShow = this;\n\n  pinsShow.pin = Pin.get($state.params);\n\n  function deletePin() {\n    pinsShow.pin.$remove(() => {\n      $state.go('boardsShow');\n    });\n  }\n\n  pinsShow.delete = deletePin;\n}\n\nPinsEditController.$inject = ['Pin', '$state'];\nfunction PinsEditController(Pin, $state) {\n  const pinsEdit = this;\n\n  pinsEdit.pin = Pin.get($state.params);\n\n  function updatePin() {\n    pinsEdit.pin.$update(() => {\n      $state.go('pinsShow', $state.params);\n    });\n  }\n  pinsEdit.update = updatePin;\n}\n"]}