{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/board.js","js/controllers/boards.js","js/directives/dragDrop.js","js/controllers/main.js","js/models/pin.js","js/controllers/pins.js","js/controllers/upload.js","js/directives/youtube.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","tokenPrefix","loginUrl","signupUrl","facebook","clientId","instagram","WhiteList","$sceDelegateProvider","resourceUrlWhitelist","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","service","console","log","Board","$resource","id","update","method","BoardsIndexController","filter","board","regex","RegExp","boardsIndex","queryString","test","title","tags","all","query","BoardsFollowingController","boardsFollowing","payload","getPayload","followedBy","_id","BoardsNewController","create","save","boardsNew","UserBoardsController","showEditForm","userBoards","currentBoard","formEditVisible","hideEditForm","showDeleteForm","hideDeleteForm","updateBoard","boardId","params","deleteBoard","deletedBoard","$remove","reload","delete","BoardsShowController","Pin","showCreateForm","boardsShow","formVisible","hideCreateForm","newPin","createPin","pin","get","showCopyForm","copyPin","formCopyVisible","copyPinToBoard","hideCopyForm","currentPin","deletePin","remove","showPin","updatedPin","followBoard","push","userId","$update","unfollowBoard","index","indexOf","splice","BoardsEditController","boardsEdit","dragDrop","reader","FileReader","restrict","replace","scope","base64","link","$scope","element","active","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","MainController","logout","main","isLoggedIn","isAuthenticated","PinsShowController","pinsShow","PinsEditController","updatePin","pinsEdit","UploadController","upload","data","youtube","width","height","template","src","split","angular","module","config","$inject","factory","directive"],"mappings":"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","file":"app.js","sourcesContent":["angular\n .module('boardApp', ['ngResource', 'ui.router', 'satellizer'])\n .config(Router)\n .config(Auth)\n .config(WhiteList);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n\n   .state('register', {\n     url: '/register',\n     templateUrl: '/templates/register.html',\n     controller: 'RegisterController as register'\n   })\n   .state('login', {\n     url: '/login',\n     templateUrl: '/templates/login.html',\n     controller: 'LoginController as login'\n   })\n   .state('menu', {\n     url: '/menu',\n     templateUrl: '/templates/menu.html'\n   })\n   .state('boardsIndex', {\n     url: '/boards',\n     templateUrl: '/templates/boardsIndex.html',\n     controller: 'BoardsIndexController as boardsIndex'\n   })\n   .state('boardsNew', {\n     url: '/boards/new',\n     templateUrl: '/templates/boardsNew.html',\n     controller: 'BoardsNewController as boardsNew'\n   })\n   .state('userBoards', {\n     url: '/boards/me',\n     templateUrl: '/templates/userBoards.html',\n     controller: 'UserBoardsController as userBoards'\n   })\n   .state('boardsFollowing', {\n     url: '/boards/following',\n     templateUrl: '/templates/boardsFollowing.html',\n     controller: 'BoardsFollowingController as boardsFollowing'\n   })\n   .state('boardsShow', {\n     url: '/boards/:id',\n     templateUrl: '/templates/boardsShow.html',\n     controller: 'BoardsShowController as boardsShow'\n   })\n   .state('boardsEdit', {\n     url: '/boards/:id/edit',\n     templateUrl: '/templates/boardsEdit.html',\n     controller: 'BoardsEditController as boardsEdit'\n   })\n   .state('pinsShow', {\n     url: '/pins/:id',\n     templateUrl: '/templates/pinsShow.html',\n     controller: 'PinsShowController as pinsShow'\n   });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.tokenPrefix = '';\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.facebook({\n    clientId: '592951794244851'\n  });\n\n  $authProvider.instagram({\n    clientId: '64171eadf0914dd7bf7839bc034e42e0'\n  });\n}\n\nWhiteList.$inject = ['$sceDelegateProvider'];\nfunction WhiteList($sceDelegateProvider) {\n  $sceDelegateProvider.resourceUrlWhitelist([\n    'self',\n    'https://www.youtube.com/**'\n  ]);\n}\n","angular.module('boardApp')\n    .controller('RegisterController', RegisterController)\n    .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('menu');\n      });\n  }\n\n  register.submit = submit;\n\n}\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('menu');\n      });\n  }\n\n  function authenticate(service) {\n    $auth.authenticate(service)\n    .then(() => {\n      $state.go('menu');\n      console.log('Is this running');\n    });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n\n}\n","angular.module('boardApp')\n  .factory('Board', Board);\n\nBoard.$inject = ['$resource'];\nfunction Board ($resource) {\n  return new $resource('/boards/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('boardApp')\n  .controller('BoardsIndexController', BoardsIndexController)\n  .controller('BoardsFollowingController', BoardsFollowingController)\n  .controller('BoardsNewController', BoardsNewController)\n  .controller('BoardsShowController', BoardsShowController)\n  .controller('BoardsEditController', BoardsEditController)\n  .controller('UserBoardsController', UserBoardsController);\n\n//SHOW ALL BOARDS\nBoardsIndexController.$inject = ['Board'];\nfunction BoardsIndexController(Board){\n  const boardsIndex = this;\n\n  boardsIndex.queryString = '';\n\n  function filter(board) {\n    const regex = new RegExp(boardsIndex.queryString, 'i');\n    return regex.test(board.title) || regex.test(board.tags);\n  }\n\n  boardsIndex.filter = filter;\n  boardsIndex.all = Board.query();\n}\n\n//SHOW FOLLOW BOARDS\nBoardsFollowingController.$inject = ['Board', '$auth'];\nfunction BoardsFollowingController(Board, $auth) {\n  const boardsFollowing = this;\n  const payload = $auth.getPayload();\n\n  boardsFollowing.all = Board.query({ followedBy: payload._id });\n}\n\n\n//CREATE NEW BOARD\nBoardsNewController.$inject = ['Board', '$state'];\nfunction BoardsNewController(Board, $state) {\n  const boardsNew = this;\n  boardsNew.board = {};\n  function create() {\n    Board.save(boardsNew.board, (board) => {\n      $state.go('boardsShow', { id: board._id });\n    });\n  }\n  boardsNew.create = create;\n}\n\n//SHOW BOARDS BY USER\nUserBoardsController.$inject = ['Board', '$auth', '$state'];\nfunction UserBoardsController(Board, $auth, $state) {\n  const userBoards = this;\n  userBoards.formEditVisible = false;\n  userBoards.currentBoard;\n  userBoards.showDeleteForm = false;\n\n  const payload = $auth.getPayload();\n  userBoards.all = Board.query({ user: payload._id });\n\n  function showEditForm(board) {\n    userBoards.currentBoard = board;\n    userBoards.formEditVisible = true;\n  }\n\n  function hideEditForm() {\n    console.log('clicked hide form!');\n    userBoards.formEditVisible = false;\n  }\n\n  function showDeleteForm() {\n    // userBoards.currentBoard = board;\n    console.log('clicked show delete form!');\n    userBoards.showDeleteForm = true;\n  }\n\n  function hideDeleteForm() {\n    console.log('clicked delete form!');\n    userBoards.showDeleteForm = false;\n  }\n\n\n  function updateBoard(currentBoard) {\n    Board.update({ id: currentBoard._id, boardId: $state.params.id }, currentBoard);\n    console.log('Why?');\n  }\n\n  userBoards.showEditForm = showEditForm;\n  userBoards.hideEditForm = hideEditForm;\n  userBoards.updateBoard = updateBoard;\n  userBoards.showDeleteForm = showDeleteForm;\n  userBoards.hideDeleteForm = hideDeleteForm;\n\n  //DELETE BOARD\n  function deleteBoard(deletedBoard) {\n    console.log('clciked delete', deletedBoard);\n    console.log('clicked!', deletedBoard);\n    deletedBoard.$remove(() => {\n      $state.reload();\n    });\n  }\n  userBoards.delete = deleteBoard;\n}\n\n//SHOW BOARDS CONTROLLER\nBoardsShowController.$inject = ['Board', 'Pin', '$state', '$auth'];\nfunction BoardsShowController(Board, Pin, $state, $auth) {\n  const boardsShow = this;\n  const payload = $auth.getPayload();\n  const userId = payload._id ;\n  let followCount = 1;\n  boardsShow.formVisible = false;\n  boardsShow.formEditVisible = false;\n  boardsShow.board = Board.get($state.params);\n  // boardsShow.showDeleteForm = false;\n\n  //ADD PIN CONTROLLER\n  boardsShow.newPin = {};\n\n  function showCreateForm() {\n    boardsShow.formVisible = true;\n  }\n\n  function hideCreateForm() {\n    boardsShow.formVisible = false;\n    boardsShow.newPin = {};\n  }\n\n  boardsShow.showCreateForm = showCreateForm;\n  boardsShow.hideCreateForm = hideCreateForm;\n\n  //CREATE PIN\n  function createPin() {\n    Pin.save({ boardId: $state.params.id }, boardsShow.newPin, () => {\n      boardsShow.pin = {};\n      hideCreateForm();\n      boardsShow.board = Board.get($state.params);\n    });\n  }\n\n  //SHOW COPY FORM\n  function showCopyForm(pin) {\n    boardsShow.copyPin = pin;\n    delete boardsShow.copyPin._id;\n\n    const payload = $auth.getPayload();\n    boardsShow.all = Board.query({ user: payload._id });\n\n    console.log('clicked', boardsShow.all);\n    boardsShow.formCopyVisible = true;\n  }\n\n  boardsShow.showCopyForm = showCopyForm;\n\n  function copyPinToBoard(board) {\n    Pin.save({ boardId: board._id }, boardsShow.copyPin, () => {\n      $state.reload();\n    });\n  }\n\n  boardsShow.copyPinToBoard = copyPinToBoard;\n\n  function hideCopyForm() {\n    boardsShow.formCopyVisible = false;\n  }\n\n  boardsShow.hideCopyForm = hideCopyForm;\n\n  //EDIT PIN CONTROLLER\n  function showEditForm(pin) {\n    boardsShow.formEditVisible = true;\n    boardsShow.currentPin = pin;\n  }\n\n  function hideEditForm() {\n    boardsShow.formEditVisible = false;\n  }\n\n  function deletePin(pin) {\n    console.log('delete me', pin);\n    Pin.remove({ id: pin._id, boardId: $state.params.id }, () => {\n      $state.reload();\n      // $state.go('boardsShow', { id: board._id });\n    });\n  }\n\n  boardsShow.deletePin = deletePin;\n\n  function showPin(pin) {\n    console.log('clicked!', pin);\n\n    showEditForm(pin);\n  }\n\n  //UPDATE BOARD CONTROLLER WITH EDIT PIN\n  function updateBoard(updatedPin) {\n    Pin.update({ id: updatedPin._id, boardId: $state.params.id }, updatedPin);\n  }\n\n  //FOLLOW BOARD\n  function followBoard() {\n    console.log('board not already followed');\n    boardsShow.board.followedBy.push(userId);\n\n    boardsShow.board.$update((board) => {\n      console.log('succes, followed board:', board);\n    });\n  }\n\n  //UN-FOLLOW BOARD\n  function unfollowBoard() {\n    const index = boardsShow.board.followedBy.indexOf(userId);\n    boardsShow.board.followedBy.splice(index,1);\n\n    boardsShow.board.$update((board) => {\n      console.log('succes, unfollowed board:', board);\n    });\n  }\n\n  boardsShow.unfollowBoard = unfollowBoard;\n  boardsShow.followBoard = followBoard;\n  boardsShow.updateBoard = updateBoard;\n  boardsShow.showEditForm = showEditForm;\n  boardsShow.hideEditForm = hideEditForm;\n  boardsShow.createPin = createPin;\n  boardsShow.showPin = showPin;\n}\n\n//EDIT BOARD\nBoardsEditController.$inject = ['Board', '$state'];\nfunction BoardsEditController(Board, $state) {\n  const boardsEdit = this;\n\n  boardsEdit.board = Board.get($state.params);\n\n  function updateBoard() {\n    boardsEdit.board.$update(() => {\n      console.log('clicked');\n      $state.go('boardsShow', $state.params);\n    });\n  }\n  boardsEdit.updateBoard = updateBoard;\n}\n","angular.module('boardApp')\n  .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '='\n    },\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n      };\n\n      element\n        .on('dragover', () => {\n          $scope.active= true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) => {\n          e.preventDefault();\n        })\n        .on('dragleave', () => {\n          $scope.active= false;\n          $scope.$apply();\n        })\n        .on('drop', (e) => {\n          e.preventDefault();\n\n          const file = (e.target.files || e.dataTransfer.files)[0];\n\n          reader.readAsDataURL(file);\n        });\n    }\n\n  };\n}\n","angular.module('boardApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state'];\nfunction MainController($auth, $state) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('login');\n      });\n  }\n  main.logout = logout;\n}\n","angular.module('boardApp')\n  .factory('Pin', Pin);\n\nPin.$inject = ['$resource'];\nfunction Pin ($resource) {\n  return new $resource('/boards/:boardId/pins/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('boardApp')\n  // .controller('PinsIndexController', PinsIndexController)\n  .controller('PinsShowController', PinsShowController)\n  .controller('PinsEditController', PinsEditController);\n\n// PinsIndexController.$inject = ['Pin'];\n// function PinsIndexController(Pin){\n//   const pinsIndex = this;\n//\n//   pinsIndex.all = Pin.query();\n// }\n\nPinsShowController.$inject = ['Pin', '$state'];\nfunction PinsShowController(Pin, $state) {\n  const pinsShow = this;\n\n  pinsShow.pin = Pin.get($state.params);\n\n  function deletePin() {\n    pinsShow.pin.$remove(() => {\n      $state.go('boardsShow');\n    });\n  }\n\n  pinsShow.delete = deletePin;\n}\n\n// PinsEditController.$inject = ['Pin', '$state'];\n// function PinsEditController(Pin, $state) {\n//   const pinsEdit = this;\n//\n//   pinsEdit.pin = Pin.get($state.params);\n//\n//   function updatePin() {\n//     Pin.save({ boardId: $state.params.id }, boardsShow.currentPin, () => {\n//       $state.go('pinsShow', $state.params);\n//     });\n//   }\n//\n//   pinsEdit.updatePin = updatePin;\n//   hideEditForm();\n// }\n\nPinsEditController.$inject = ['Pin', '$state'];\nfunction PinsEditController(Pin, $state) {\n  const pinsEdit = this;\n\n  pinsEdit.pin = Pin.get($state.params);\n\n  function updatePin() {\n    pinsEdit.pin.$update(() => {\n      $state.go('pinsShow', $state.params);\n    });\n  }\n  pinsEdit.update = updatePin;\n}\n","angular.module('boardApp')\n  .controller('UploadController', UploadController);\n\nfunction UploadController() {\n  const upload = this;\n\n  upload.data = {};\n}\n","angular.module('boardApp')\n  .directive('youtube', youtube);\n\nfunction youtube() {\n  return {\n    restrict: 'E',\n    replace: true,\n    scope: {\n      link: '@',\n      width: '@',\n      height: '@'\n    },\n    template: '<iframe width=\"{{ width }}\" height=\"{{ height }}\" src=\"{{ src }}\" frameborder=\"0\" allowfullscreen></iframe>',\n    link($scope) {\n      $scope.src = `https://www.youtube.com/embed/${$scope.link.split('=').splice(-1)[0]}`;\n    }\n  };\n}\n"]}