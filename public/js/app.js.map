{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/board.js","js/controllers/boards.js","js/controllers/main.js","js/models/pin.js","js/controllers/pins.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","tokenPrefix","loginUrl","signupUrl","facebook","clientId","instagram","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","service","console","log","Board","$resource","id","update","method","BoardsIndexController","boardsIndex","all","query","BoardsNewController","create","save","boardsNew","board","_id","UserBoardsController","deleteBoard","$remove","reload","showEditForm","userBoards","formEditVisible","hideEditForm","updateBoard","$update","payload","getPayload","delete","BoardsShowController","Pin","showCreateForm","boardsShow","formVisible","hideCreateForm","newPin","createPin","boardId","params","pin","get","showCopyForm","copyPin","formCopyVisible","copyPinToBoard","hideCopyForm","currentPin","PinsEditController","updatePin","pinsEdit","showPin","updatedPin","$inject","BoardsEditController","boardsEdit","MainController","logout","main","isLoggedIn","isAuthenticated","PinsShowController","deletePin","pinsShow","angular","module","config","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular\n .module('boardApp', ['ngResource', 'ui.router', 'satellizer'])\n .config(Router)\n .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n\n   .state('register', {\n     url: '/register',\n     templateUrl: '/templates/register.html',\n     controller: 'RegisterController as register'\n   })\n   .state('login', {\n     url: '/login',\n     templateUrl: '/templates/login.html',\n     controller: 'LoginController as login'\n   })\n   .state('menu', {\n     url: '/menu',\n     templateUrl: '/templates/menu.html'\n   })\n   .state('boardsIndex', {\n     url: '/boards',\n     templateUrl: '/templates/boardsIndex.html',\n     controller: 'BoardsIndexController as boardsIndex'\n   })\n   .state('boardsNew', {\n     url: '/boards/new',\n     templateUrl: '/templates/boardsNew.html',\n     controller: 'BoardsNewController as boardsNew'\n   })\n   .state('userBoards', {\n     url: '/boards/me',\n     templateUrl: '/templates/userBoards.html',\n     controller: 'UserBoardsController as userBoards'\n   })\n   .state('boardsShow', {\n     url: '/boards/:id',\n     templateUrl: '/templates/boardsShow.html',\n     controller: 'BoardsShowController as boardsShow'\n   })\n   .state('boardsEdit', {\n     url: '/boards/:id/edit',\n     templateUrl: '/templates/boardsEdit.html',\n     controller: 'BoardsEditController as boardsEdit'\n   })\n   .state('pinsShow', {\n     url: '/pins/:id',\n     templateUrl: '/templates/pinsShow.html',\n     controller: 'PinsShowController as pinsShow'\n   });\n\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.tokenPrefix = '';\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.facebook({\n    clientId: '592951794244851'\n  });\n\n  $authProvider.instagram({\n    clientId: '64171eadf0914dd7bf7839bc034e42e0'\n  });\n}\n","angular.module('boardApp')\n    .controller('RegisterController', RegisterController)\n    .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('menu');\n      });\n  }\n\n  register.submit = submit;\n\n}\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('menu');\n      });\n  }\n\n  function authenticate(service) {\n    $auth.authenticate(service)\n    .then(() => {\n      $state.go('menu');\n      console.log('Is this running');\n    });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n\n}\n","angular.module('boardApp')\n  .factory('Board', Board);\n\nBoard.$inject = ['$resource'];\nfunction Board ($resource) {\n  return new $resource('/boards/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('boardApp')\n  .controller('BoardsIndexController', BoardsIndexController)\n  .controller('BoardsNewController', BoardsNewController)\n  .controller('BoardsShowController', BoardsShowController)\n  .controller('BoardsEditController', BoardsEditController)\n  .controller('UserBoardsController', UserBoardsController);\n\n//SHOW ALL BOARDS\nBoardsIndexController.$inject = ['Board'];\nfunction BoardsIndexController(Board){\n  const boardsIndex = this;\n\n  boardsIndex.all = Board.query();\n}\n\n//CREATE NEW BOARD\nBoardsNewController.$inject = ['Board', '$state'];\nfunction BoardsNewController(Board, $state) {\n  const boardsNew = this;\n  boardsNew.board = {};\n  function create() {\n    Board.save(boardsNew.board, (board) => {\n      $state.go('boardsShow', { id: board._id });\n    });\n  }\n  boardsNew.create = create;\n}\n\n//SHOW BOARDS BY USER\nUserBoardsController.$inject = ['Board', '$auth', '$state'];\nfunction UserBoardsController(Board, $auth, $state) {\n  const userBoards = this;\n  userBoards.formEditVisible = false;\n\n  const payload = $auth.getPayload();\n  userBoards.all = Board.query({ user: payload._id });\n  console.log('clicked', userBoards.all);\n\n  //DELETE BOARD\n  function deleteBoard(board) {\n    console.log('clicked!', board);\n    board.$remove(() => {\n      $state.reload();\n    });\n  }\n  userBoards.delete = deleteBoard;\n\n  function showEditForm(board) {\n    userBoards.formEditVisible = true;\n    userBoards.board = board;\n  }\n\n  function hideEditForm() {\n    userBoards.formEditVisible = false;\n  }\n\n  userBoards.showEditForm = showEditForm;\n  userBoards.hideEditForm = hideEditForm;\n\n  function updateBoard() {\n    userBoards.board.$update(() => {\n      $state.reload();\n    });\n  }\n  userBoards.updateBoard = updateBoard;\n}\n\n//SHOW BOARDS CONTROLLER\nBoardsShowController.$inject = ['Board', 'Pin', '$state', '$auth'];\nfunction BoardsShowController(Board, Pin, $state, $auth) {\n  const boardsShow = this;\n  boardsShow.formVisible = false;\n  boardsShow.formEditVisible = false;\n  boardsShow.board = Board.get($state.params);\n\n  //ADD PIN CONTROLLER\n  boardsShow.newPin = {};\n\n  function showCreateForm() {\n    boardsShow.formVisible = true;\n  }\n\n  function hideCreateForm() {\n    boardsShow.formVisible = false;\n    boardsShow.newPin = {};\n  }\n\n  boardsShow.showCreateForm = showCreateForm;\n  boardsShow.hideCreateForm = hideCreateForm;\n\n  //CREATE PIN\n  function createPin() {\n    Pin.save({ boardId: $state.params.id }, boardsShow.newPin, () => {\n      boardsShow.pin = {};\n      hideCreateForm();\n      boardsShow.board = Board.get($state.params);\n    });\n  }\n\n  //SHOW COPY FORM\n  function showCopyForm(pin) {\n    boardsShow.copyPin = pin;\n\n    const payload = $auth.getPayload();\n    boardsShow.all = Board.query({ user: payload._id });\n\n    console.log('clicked', boardsShow.all);\n    boardsShow.formCopyVisible = true;\n  }\n\n  function copyPinToBoard(board) {\n    Pin.save({ boardId: board._id }, boardsShow.copyPin, () => {\n      $state.reload();\n    });\n  }\n\n  boardsShow.copyPinToBoard = copyPinToBoard;\n\n  function hideCopyForm() {\n    boardsShow.formCopyVisible = false;\n  }\n\n  //EDIT PIN CONTROLLER\n  function showEditForm(pin) {\n    boardsShow.formEditVisible = true;\n    boardsShow.currentPin = pin;\n  }\n\n  function hideEditForm() {\n    boardsShow.formEditVisible = false;\n  }\n\n  PinsEditController.$inject = ['Pin', '$state'];\n  function PinsEditController(Pin, $state) {\n    const pinsEdit = this;\n\n    pinsEdit.pin = Pin.get($state.params);\n\n    function updatePin() {\n      Pin.save({ boardId: $state.params.id }, boardsShow.currentPin, () => {\n        $state.go('pinsShow', $state.params);\n      });\n    }\n    pinsEdit.updatePin = updatePin;\n    hideEditForm();\n  }\n\n  function showPin(pin) {\n    console.log('clicked!', pin);\n    showEditForm(pin);\n  }\n\n  boardsShow.showEditForm = showEditForm;\n  boardsShow.hideEditForm = hideEditForm;\n  boardsShow.createPin = createPin;\n  boardsShow.showPin = showPin;\n  boardsShow.showCopyForm = showCopyForm;\n  boardsShow.hideCopyForm = hideCopyForm;\n\n  //UPDATE BOARD CONTROLLER WITH EDIT PIN\n  function updateBoard(updatedPin) {\n    Pin.update({ id: updatedPin._id, boardId: $state.params.id }, updatedPin);\n  }\n  boardsShow.updateBoard = updateBoard;\n\n}\n\n//EDIT BOARD\nBoardsEditController.$inject = ['Board', '$state'];\nfunction BoardsEditController(Board, $state) {\n  const boardsEdit = this;\n\n  boardsEdit.board = Board.get($state.params);\n\n  function updateBoard() {\n    boardsEdit.board.$update(() => {\n      $state.go('boardsShow', $state.params);\n    });\n  }\n  boardsEdit.updateBoard = updateBoard;\n}\n","angular.module('boardApp')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state'];\nfunction MainController($auth, $state) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('login');\n      });\n  }\n  main.logout = logout;\n}\n","angular.module('boardApp')\n  .factory('Pin', Pin);\n\nPin.$inject = ['$resource'];\nfunction Pin ($resource) {\n  return new $resource('/boards/:boardId/pins/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('boardApp')\n  // .controller('PinsIndexController', PinsIndexController)\n  .controller('PinsShowController', PinsShowController)\n  .controller('PinsEditController', PinsEditController);\n\n// PinsIndexController.$inject = ['Pin'];\n// function PinsIndexController(Pin){\n//   const pinsIndex = this;\n//\n//   pinsIndex.all = Pin.query();\n// }\n\nPinsShowController.$inject = ['Pin', '$state'];\nfunction PinsShowController(Pin, $state) {\n  const pinsShow = this;\n\n  pinsShow.pin = Pin.get($state.params);\n\n  function deletePin() {\n    pinsShow.pin.$remove(() => {\n      $state.go('boardsShow');\n    });\n  }\n\n  pinsShow.delete = deletePin;\n}\n\nPinsEditController.$inject = ['Pin', '$state'];\nfunction PinsEditController(Pin, $state) {\n  const pinsEdit = this;\n\n  pinsEdit.pin = Pin.get($state.params);\n\n  function updatePin() {\n    pinsEdit.pin.$update(() => {\n      $state.go('pinsShow', $state.params);\n    });\n  }\n  pinsEdit.update = updatePin;\n}\n"]}