"use strict";function Router(o,r){o.state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("test",{url:"/test",templateUrl:"/templates/test.html"}).state("boardsIndex",{url:"/boards",templateUrl:"/templates/boardsIndex.html",controller:"BoardsIndexController as boardsIndex"}).state("boardsNew",{url:"/boards/new",templateUrl:"/templates/boardsNew.html",controller:"BoardsNewController as boardsNew"}).state("userBoards",{url:"/boards/me",templateUrl:"/templates/userBoards.html",controller:"UserBoardsController as userBoards"}).state("boardsShow",{url:"/boards/:id",templateUrl:"/templates/boardsShow.html",controller:"BoardsShowController as boardsShow"}).state("boardsEdit",{url:"/boards/:id/edit",templateUrl:"/templates/boardsEdit.html",controller:"BoardsEditController as boardsEdit"}).state("pinsShow",{url:"/pins/:id",templateUrl:"/templates/pinsShow.html",controller:"PinsShowController as pinsShow"}),r.otherwise("/")}function Auth(o){o.tokenPrefix="",o.loginUrl="/login",o.signupUrl="/register",o.facebook({clientId:"592951794244851"}),o.instagram({clientId:"64171eadf0914dd7bf7839bc034e42e0"})}function RegisterController(o,r){function t(){o.signup(e.user).then(function(){r.go("test")})}var e=this;e.user={},e.submit=t}function LoginController(o,r){function t(){o.login(n.credentials).then(function(){r.go("test")})}function e(t){o.authenticate(t).then(function(){r.go("test"),console.log("Is this running")})}var n=this;n.credentials={},n.submit=t,n.authenticate=e}function Board(o){return new o("/boards/:id",{id:"@_id"},{update:{method:"PUT"}})}function BoardsIndexController(o){var r=this;r.all=o.query()}function BoardsNewController(o,r){function t(){o.save(e.board,function(o){r.go("boardsShow",{id:o._id})})}var e=this;e.board={},e.create=t}function UserBoardsController(o,r,t){function e(o){console.log("clicked!",o),o.$remove(function(){t.reload()})}var n=this,l=r.getPayload();n.all=o.query({user:l._id}),n.delete=e}function BoardsShowController(o,r,t){function e(){p.formVisible=!0}function n(){p.formVisible=!1,p.newPin={}}function l(){r.save({boardId:t.params.id},p.newPin,function(){p.pin={},n(),p.board=o.get(t.params)})}function a(o){p.formEditVisible=!0,p.currentPin=o}function i(){p.formEditVisible=!1}function s(o,r){function t(){o.save({boardId:r.params.id},p.currentPin,function(){r.go("pinsShow",r.params)})}var e=this;e.pin=o.get(r.params),e.updatePin=t,i()}function d(o){console.log("delete me",o),o.remove(function(){t.go("pinsShow")})}function u(o){console.log("clicked!",o),a(o)}function c(o){r.update({id:o._id,boardId:t.params.id},o)}var p=this;p.formVisible=!1,p.formEditVisible=!1,p.board=o.get(t.params),p.newPin={},p.showCreateForm=e,p.hideCreateForm=n,s.$inject=["Pin","$state"],p.deletePin=d,p.showEditForm=a,p.hideEditForm=i,p.createPin=l,p.showPin=u,p.updateBoard=c}function BoardsEditController(o,r){function t(){e.board.$update(function(){r.go("boardsShow",r.params)})}var e=this;e.board=o.get(r.params),e.updateBoard=t}function MainController(o,r){function t(){o.logout().then(function(){r.go("login")})}var e=this;e.isLoggedIn=o.isAuthenticated,e.logout=t}function Pin(o){return new o("/boards/:boardId/pins/:id",{id:"@_id"},{update:{method:"PUT"}})}function PinsShowController(o,r){function t(){e.pin.$remove(function(){r.go("boardsShow")})}var e=this;e.pin=o.get(r.params),e.delete=t}function PinsEditController(o,r){function t(){e.pin.$update(function(){r.go("pinsShow",r.params)})}var e=this;e.pin=o.get(r.params),e.update=t}angular.module("boardApp",["ngResource","ui.router","satellizer"]).config(Router).config(Auth),Router.$inject=["$stateProvider","$urlRouterProvider"],Auth.$inject=["$authProvider"],angular.module("boardApp").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("boardApp").factory("Board",Board),Board.$inject=["$resource"],angular.module("boardApp").controller("BoardsIndexController",BoardsIndexController).controller("BoardsNewController",BoardsNewController).controller("BoardsShowController",BoardsShowController).controller("BoardsEditController",BoardsEditController).controller("UserBoardsController",UserBoardsController),BoardsIndexController.$inject=["Board"],BoardsNewController.$inject=["Board","$state"],UserBoardsController.$inject=["Board","$auth","$state"],BoardsShowController.$inject=["Board","Pin","$state"],BoardsEditController.$inject=["Board","$state"],angular.module("boardApp").controller("MainController",MainController),MainController.$inject=["$auth","$state"],angular.module("boardApp").factory("Pin",Pin),Pin.$inject=["$resource"],angular.module("boardApp").controller("PinsShowController",PinsShowController).controller("PinsEditController",PinsEditController),PinsShowController.$inject=["Pin","$state"],PinsEditController.$inject=["Pin","$state"];
//# sourceMappingURL=app.js.map
